<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <!--
        1、mybatis可以使用properties来引入外部properties配置文件的内容
            resource：引入类路径下的 资源
            url:引入网络路径或者磁盘路径下的资源-->
    <properties resource="conf/db.properties"></properties>
    <!-- 2、setting包含很多重要的设置项
             setting：用来设置每一个 设置项
             name：设置项名
             value：设置取值
       -->
    <settings>
        <!--设置驼峰命名规则，即使数据库的表和bean的名称不需要完全对应就能实现对接-->
        <setting name="mapUnderscoreToCamelCase" value="true"/>
    </settings>
    <!--3.typeAliases：别名处理器：可以为我们 的java类型起别名
           别名不区分大小写-->
<!--    <typeAliases>-->
        <!--typeAlias:为某个java类型起别名
                type：指定要起别名的类型全类名；默认别名就是类名小写：employee
                alias:指定新的别名
                这里和EmployeeMapping.xml里面的resultType对应-->
<!--        <typeAlias type="MyBatis.Employee" alias="emp"/>-->
        <!--package：为某个包下的所有类批量取别名
            name：指定包名(为当前包及以下面所有的后代包的每一个类都起一个默认的别名（类名小写）)-->
<!--        <package name="MyBatis"/>-->
        <!--在批量别名的情况下，使用@Alias注解为某个类型指定新的别名-->

<!--    </typeAliases>-->

<!--    4、environments：环境们，mybatis可以配置多种环境
            environment：配置一个具体的环境信息；必须有两个标签
            id:代表当前环境的唯一标识
            transactionManager：事务管理器JDBC | MANAGED
            dataSource:数据源类型 UNPOOLED|POOLED|JNDI
                        自定义数据源：DataSourceFactory
            -->
    <environments default="development">
        <environment id="development">
            <transactionManager type="JDBC"/>
            <dataSource type="POOLED">
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.jdbcUrl}"/>
                <property name="username" value="${jdbc.user}"/>
                <property name="password" value="${jdbc.passwd}"/>
            </dataSource>
        </environment>
    </environments>
    <!--5、databaseIdProvider：支持多数据库厂商
        type="DB_VENDER":VendorDatabaseIdProvider
            作用就是得到数据库厂商的标识(驱动)，mybatis就能根据数据库厂商标识来执行不同的sql
            标识：MySQL，Orcale，SQL Server-->
<!--    <databaseIdProvider type=""></databaseIdProvider>-->


<!--将写好的SQL映射文件一定要注册得到全局配置文件中-->
    <mappers>
        <!--mapper:注册一个sql映射
            注册配置文件：
            resource:引用类路径下的sql映射文件
            url:引用网络路径或者磁盘路径下的sql映射文件
            注册接口：
            class：引用接口
                    1、有sql映射文件、映射文件名必须和接口同名，并且放在与接口同一目录下
                    2、没有sql映射文件，所有的sql都是利用注解写在接口上
                    推荐：
                        比较重要的，复杂的Dao接口我们来写sql映射文件
                        不重要的，简单的Dao接口为了开发快速可以使用注解-->
        <mapper resource="conf/DepartmentMapper.xml"/>
        <mapper resource="conf/EmployeeMappingPlus.xml"/>
    </mappers>
</configuration>